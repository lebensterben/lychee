name: CI
on:
  repository_dispatch:
  workflow_dispatch:
  push:
    branches:
      - master
    tags:
      - "*.*.*"
  pull_request:
    types:
      - opened
      - synchronize

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout lychee source code
        uses: actions/checkout@v3

      - name: Install minimal rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout lychee source code
        uses: actions/checkout@v3

      - name: Install minimal rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout lychee source code
        uses: actions/checkout@v3

      - name: Install minimal rust toolchain with rustfmt
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
          override: true

      - name: Run cargo fmt in check mode
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout lychee source code
        uses: actions/checkout@v3

      - name: Install minimal rust toolchain with clippy
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy
          override: true

      - name: Run cargo clippy (deny warnings)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          # --all-targets makes it lint tests too
          args: --all-targets -- --deny warnings

  publish-check:
    needs:
      - check
      - test
      - fmt
      - clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout lychee source code
        uses: actions/checkout@v3

      - name: Fetch cargo dependencies
        uses: actions-rs/cargo@v1
        with:
          command: fetch

      - name: Publish checks for lychee-lib
        uses: actions-rs/cargo@v1
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        with:
          command: publish
          args: --dry-run --manifest-path lychee-lib/Cargo.toml

      # Can't check lychee binary as it depends on the lib above
      # and `--dry-run` doesn't allow unpublished crates yet.
      # https://github.com/rust-lang/cargo/issues/1169
      # `cargo-publish-all` is a solution but it doesn't work with
      # Rust edition 2021.
      # Therefore skip the check for now, which is probably fine
      # because the binary is just a small wrapper around the CLI
      # anyway.
      #
      # - name: cargo publish lychee
      #   uses: actions-rs/cargo@v1
      #   env:
      #     CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      #   with:
      #     command: publish
      #     args: --dry-run --manifest-path lychee-bin/Cargo.toml

  publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - publish-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout lychee source code
        uses: actions/checkout@v3

      - name: Fetch cargo dependencies
        uses: actions-rs/cargo@v1
        with:
          command: fetch

      - name: Publish lychee-lib
        uses: actions-rs/cargo@v1
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        with:
          command: publish
          args: --manifest-path lychee-lib/Cargo.toml

      - name: Wait for crates.io publication
        run: sleep 60s
        shell: bash

      - name: Publish lychee-bin
        uses: actions-rs/cargo@v1
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        with:
          command: publish
          args: --manifest-path lychee-bin/Cargo.toml
